// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  define(['avalon', 'api', 'page', 'utils'], function(avalon, api, page, utils) {
    var select_set;
    select_set = avalon.define({
      $id: 'select_set',
      title: '选择影片集',
      url: null,
      list: [],
      error: '',
      loading: '/Assets/logic/common/loading.html',
      currentPage: 1,
      pageHtml: '',
      count: 18,
      searchQuery: '',
      ac: 0,
      mod: avalon.vmodels.dashboard.mod,
      host: avalon.vmodels.dashboard.host,
      uid: avalon.vmodels.dashboard.uid,
      cancel: function() {
        return select_set.parentRefresh();
      },
      search: function(clear) {
        if (clear == null) {
          clear = false;
        }
        if (true === clear) {
          select_set.searchQuery = '';
        }
        return select_set.getList('re', select_set.searchQuery);
      },
      showImg: function(el) {
        var ref;
        if (el['imgs'] && el['imgs'][select_set.uid]) {
          return select_set.host + el['imgs'][select_set.uid];
        }
        if (ref = el.platform, indexOf.call(NOTSHOWIMG_PLATFORM, ref) >= 0) {
          return '/images/default.png';
        } else {
          return el['img'];
        }
      },
      getList: function(ac, searchQuery) {
        if (ac == null) {
          ac = '';
        }
        if (searchQuery == null) {
          searchQuery = '';
        }
        select_set.emptyList('loading');
        if ('re' === ac) {
          select_set.currentPage = 1;
          select_set.list = [];
          select_set.searchQuery = searchQuery;
        } else {
          select_set.currentPage++;
        }
        return api.getApi('/videoset/get_resList', {
          'page': select_set.currentPage,
          'count': select_set.count,
          'order': 'allplaynum',
          'direction': -1,
          'type': 'dledAndDlOneAndCreate',
          'title_query': select_set.searchQuery,
          'deviceId': select_set.args.deviceId
        }, function(result) {
          if (SUCCESS === result.code) {
            if (result.list.length > 0) {
              select_set.list = select_set.list.concat(result.list);
            }
            return select_set.emptyList();
          } else {
            return select_set.emptyList(false);
          }
        });
      },
      emptyList: function(status) {
        if (status == null) {
          status = [];
        }
        return select_set.error = status;
      },
      addTo: function(toSetId) {
        return api.getApi('/videoset/add_videos', {
          "videoIds": JSON.stringify(select_set.args.selectedVideo),
          "deviceId": select_set.args.deviceId,
          "toSetId": toSetId
        }, function(result) {
          if (SUCCESS === result.code) {
            require(['logic/common/tips'], function(tips) {
              return tips.showTips(result.msg, 'success', {
                'autoHide': 2000
              });
            });
            return select_set.parentRefresh();
          } else {
            return require(['logic/common/tips'], function(tips) {
              return tips.showTips(result.msg, 'error');
            });
          }
        });
      },
      parentRefresh: function() {
        if (select_set.refreshModule) {
          return require([select_set.refreshModule['mod']], function(refresh) {
            return refresh[select_set.refreshModule['fun']]();
          });
        }
      },
      refreshModule: {},
      args: {},
      init: function(url, ac, refreshModule, args) {
        if (ac == null) {
          ac = 0;
        }
        if (refreshModule == null) {
          refreshModule = {};
        }
        if (args == null) {
          args = {};
        }
        avalon.log('select_set page load complete');
        select_set.url = url;
        select_set.refreshModule = refreshModule;
        select_set.args = args;
        select_set.ac = ac;
        select_set.currentPage = 0;
        select_set.list = [];
        select_set.searchQuery = '';
        return select_set.getList();
      }
    });
    return select_set;
  });

}).call(this);

//# sourceMappingURL=select_set.js.map
