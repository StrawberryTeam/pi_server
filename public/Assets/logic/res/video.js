// Generated by CoffeeScript 1.12.7
(function() {
  'use strict';
  var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  define(['text!/Pages/res/video.html', 'avalon', 'api', 'page', 'avalon.cookie', 'select2'], function(pageMain, avalon, api, page) {
    var vm;
    avalon.templateCache.res_video = pageMain;
    vm = avalon.define({
      $id: 'res_video',
      title: '影片列表',
      mod: avalon.vmodels.dashboard.mod,
      host: avalon.vmodels.dashboard.host,
      uid: avalon.vmodels.dashboard.uid,
      url: null,
      loading: '/Assets/logic/common/loading.html',
      setId: null,
      platform: null,
      currentPage: 1,
      pageHtml: '',
      count: 30,
      searchQuery: '',
      order: '_id',
      direction: 1,
      showImg: function(el) {
        var ref;
        if (el['imgs'] && el['imgs'][vm.uid]) {
          return vm.host + el['imgs'][vm.uid];
        }
        if (ref = vm.item['platform'], indexOf.call(NOTSHOWIMG_PLATFORM, ref) >= 0) {
          return '/images/default.png';
        } else {
          return el['img'];
        }
      },
      search: function() {
        if ('' !== vm.searchQuery) {
          return avalon.router.navigate('res:video?setid=' + vm.setId + '&query=' + vm.searchQuery);
        }
      },
      setting: {},
      cateList: [],
      getList: function() {
        vm.cateList = [];
        vm.pageHtml = '';
        return api.getApi('/videolist/get_list', {
          'setId': vm.setId,
          'page': vm.currentPage,
          'count': vm.count,
          'order': vm.order,
          'direction': vm.direction,
          'keyword': vm.searchQuery
        }, function(result) {
          var totalPage;
          if (SUCCESS === result.code) {
            vm.setting = result.setting;
            vm.cateList = result.list;
            totalPage = Math.ceil(result.total / parseInt(vm.count));
            return vm.pageHtml = page.getPage(vm.currentPage, totalPage, vm.url, 'res:video');
          } else if (ISEMPTY === result.code) {
            return require(['logic/common/tips'], function(tips) {
              return tips.showTips('没有任何单集', 'error');
            });
          } else {
            return require(['logic/common/tips'], function(tips) {
              return tips.showTips(result.msg, 'error');
            });
          }
        });
      },
      item: {},
      getSetInfo: function() {
        return api.getApi('/videoset/get_info', {
          '_id': vm.setId
        }, function(result) {
          if (SUCCESS === result.code) {
            return vm.item = result.item;
          } else {
            return require(['logic/common/tips'], function(tips) {
              return tips.showTips(result.msg, 'error');
            });
          }
        });
      },
      init: function(url) {
        avalon.log('task home page load complete');
        vm.url = url;
        vm.setId = vm.url.setid;
        vm.currentPage = vm.url.page ? vm.url.page : 1;
        vm.searchQuery = vm.url.query ? vm.url.query : '';
        vm.getList();
        return vm.getSetInfo();
      }
    });
    return vm;
  });

}).call(this);

//# sourceMappingURL=video.js.map
