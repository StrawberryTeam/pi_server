// Generated by CoffeeScript 1.12.7
(function() {
  'use strict';
  define(['text!/Pages/select/home.html', 'avalon', 'api', 'page', 'avalon.cookie', 'select2'], function(pageMain, avalon, api, page) {
    var vm;
    avalon.templateCache.select_home = pageMain;
    vm = avalon.define({
      $id: 'select_home',
      title: '',
      mod: avalon.vmodels.dashboard.mod,
      nuid: avalon.vmodels.dashboard.uid,
      url: null,
      loading: '/Assets/logic/common/loading.html',
      list: [],
      getList: function() {
        return api.getApi('/setting/get_list', {}, function(result) {
          if (SUCCESS === result.code) {
            return vm.list = result.list;
          } else if (ISEMPTY === result.code) {
            return require(['logic/common/tips'], function(tips) {
              return tips.showTips('没有任何设备', 'error');
            });
          } else {
            return require(['logic/common/tips'], function(tips) {
              return tips.showTips(result.msg, 'error');
            });
          }
        });
      },
      submit: function() {
        var apiUrl;
        if (!vm.name || !vm.uid || !vm.host) {
          require(['logic/common/tips'], function(tips) {
            return tips.showTips('未填写完整', 'error');
          });
        }
        if (1 === vm.ac) {
          apiUrl = '/setting/newSetting';
        } else {
          apiUrl = '/setting/editSetting';
        }
        return api.getApi(apiUrl, {
          'name': vm.name,
          'uid': vm.uid,
          'host': vm.host
        }, function(result) {
          if (SUCCESS === result.code) {
            require(['logic/common/tips'], function(tips) {
              return tips.showTips(result.msg, 'success', {
                'autoHide': 2000
              });
            });
            return vm.getList();
          } else {
            return require(['logic/common/tips'], function(tips) {
              return tips.showTips(result.msg, 'error');
            });
          }
        });
      },
      change: function(uid) {
        var date, time;
        date = new Date();
        time = date.getTime() + 60 * 60 * 24 * 30 * 1000;
        date.setTime(time);
        avalon.cookie.set('uid', uid, {
          'expires': date,
          'Path': '/'
        });
        avalon.router.navigate('res:list');
        return window.location.reload(true);
      },
      name: '',
      uid: '',
      host: '',
      btn_name: '',
      ac: 1,
      edit: function(index) {
        if (index == null) {
          index = null;
        }
        if (null === index) {
          return vm.emptyEdit();
        } else {
          vm.name = vm.list[index]['name'];
          vm.uid = vm.list[index]['uid'];
          vm.host = vm.list[index]['host'];
          vm.btn_name = '更新 ' + vm.name;
          return vm.ac = 2;
        }
      },
      emptyEdit: function() {
        vm.name = '';
        vm.uid = '';
        vm.host = '';
        vm.btn_name = '添加新设备';
        return vm.ac = 1;
      },
      init: function(url) {
        avalon.log('select home page load complete');
        vm.url = url;
        vm.emptyEdit();
        vm.getList();
        avalon.vmodels.play.title = '';
        return document.title = avalon.vmodels.play.title;
      }
    });
    return vm;
  });

}).call(this);

//# sourceMappingURL=home.js.map
